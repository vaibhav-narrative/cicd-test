name: CI ‚Üí Remote Tests
on:
  push:
    branches: [ main ]
  pull_request:
jobs:
  remote-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Trigger remote tests & wait
        env:
          TRYNARRATIVE_API_TOKEN: ${{ secrets.TRYNARRATIVE_API_TOKEN }}
          SERVICE_URL: https://backend-staging.trynarrative.com
        run: |
          # 1) Read and base64-encode your YAML
          cfg=$(base64 -w0 < trynarrative.yml)
          # 2) Kick off a test run
          resp=$(curl -s -X POST $SERVICE_URL/api/v1/cicd/github/runs \
            -H "Authorization: Bearer $TRYNARRATIVE_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                "repo": "'"${{ github.repository }}"'",
                "commit": "'"${{ github.sha }}"'",
                "config": "'"$cfg"'"
              }')
          
          # Check if the response is valid JSON and extract run_id
          echo "API Response: $resp"
          if echo "$resp" | jq -e . >/dev/null 2>&1; then
            run_id=$(echo "$resp" | jq -r .run_id)
            if [ "$run_id" = "null" ] || [ -z "$run_id" ]; then
              echo "‚ùå No run_id found in response"
              echo "Full response: $resp"
              exit 1
            fi
            echo "üëâ Test run ID is $run_id"
          else
            echo "‚ùå Invalid JSON response from API"
            echo "Response: $resp"
            exit 1
          fi
          # 3) Poll status up to 5 minutes
          for i in {1..30}; do
            status_resp=$(curl -s $SERVICE_URL/api/v1/cicd/github/runs/$run_id/status)
            if echo "$status_resp" | jq -e . >/dev/null 2>&1; then
              status=$(echo "$status_resp" | jq -r .status)
              echo "Status: $status"
              if [ "$status" = "success" ]; then
                echo "‚úÖ Tests passed!"
                exit 0
              fi
              
              if [ "$status" = "failed" ]; then
                echo "‚ùå Tests failed!"
                exit 1
              fi
            else
              echo "‚ùå Invalid JSON response when checking status"
              echo "Response: $status_resp"
              exit 1
            fi
            sleep 10
          done
          echo "‚ùå Timed out waiting for test results"
          exit 1